@startuml 
skinparam monochrome true
skinparam backgroundColor #EEEEEE
title Project modules description\n

object App
App : The window showed to user

class Drawer
Drawer : Creates window based on AlgState data \nand interprets user input to AlgHandler methods\n

class AlgHandler
AlgHandler : Handles algorithm and data

AlgHandler : Has same atributes as AlgState

AlgHandler : doAlgStep()
AlgHandler : doStepBack()
AlgHandler : doAlgToEnd()

class AlgState
AlgState : Single state of the algorithm \nCan be used as memory unit\n
AlgState : Can't be changed\n

AlgState : currentStage : enum
AlgState : graph : GraphOriented
AlgState : searchStack : Stack
AlgState : handeledNodes : HashSet
AlgState : nodesOrder : List
AlgState : connectComponents : List<List<T>> 

AlgState : getNodesList()
AlgState : getEdgesList()
AlgState : getUsedNodesList()
AlgState : getCurrentNode()


class GraphOriented
GraphOriented : regular oriented graph\n
GraphOriented : jeneric based\n

GraphOriented : nodes : HashSet<T>
GraphOriented : adjacencyMap : HashMap<T, HashSet<T>>

GraphOriented : addEdge()
GraphOriented : inversed() : GraphOriented



abstract class Observable
Observable : Observer pattern class\nJava-implemented
Observable : update()
abstract class Observer
Observer : Observer pattern class\nJava-implemented

Observer <|- Drawer
Observable <|- AlgHandler


App -- Drawer : Window created by Drawer
Drawer <-- AlgHandler
Drawer <-- AlgState
AlgHandler ..> Drawer : update()
AlgHandler *-- AlgState
AlgState <-- GraphOriented




@enduml